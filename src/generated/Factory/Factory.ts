// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FactoryCreated extends ethereum.Event {
  get params(): FactoryCreated__Params {
    return new FactoryCreated__Params(this);
  }
}

export class FactoryCreated__Params {
  _event: FactoryCreated;

  constructor(event: FactoryCreated) {
    this._event = event;
  }
}

export class IdeaCreated extends ethereum.Event {
  get params(): IdeaCreated__Params {
    return new IdeaCreated__Params(this);
  }
}

export class IdeaCreated__Params {
  _event: IdeaCreated;

  constructor(event: IdeaCreated) {
    this._event = event;
  }

  get idea(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Factory extends ethereum.SmartContract {
  static bind(address: Address): Factory {
    return new Factory("Factory", address);
  }

  registry(param0: BigInt): Address {
    let result = super.call("registry", "registry(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_registry(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("registry", "registry(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateIdeaCall extends ethereum.Call {
  get inputs(): CreateIdeaCall__Inputs {
    return new CreateIdeaCall__Inputs(this);
  }

  get outputs(): CreateIdeaCall__Outputs {
    return new CreateIdeaCall__Outputs(this);
  }
}

export class CreateIdeaCall__Inputs {
  _call: CreateIdeaCall;

  constructor(call: CreateIdeaCall) {
    this._call = call;
  }

  get ideaName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get ideaTicker(): string {
    return this._call.inputValues[1].value.toString();
  }

  get ideaShares(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get datumIpfsHash(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class CreateIdeaCall__Outputs {
  _call: CreateIdeaCall;

  constructor(call: CreateIdeaCall) {
    this._call = call;
  }
}
